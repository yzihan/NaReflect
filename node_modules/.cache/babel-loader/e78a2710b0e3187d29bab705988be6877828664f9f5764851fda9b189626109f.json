{"ast":null,"code":"import { backupMethod, checkBehavior, elementScrollXY, failedExecute, failedExecuteInvalidEnumValue, isObject, scrollingElement } from \"./common.js\";\nimport { scrollEndEvent } from \"./scroll-end-event.js\";\nimport { now, step } from \"./scroll-step.js\";\n// https://drafts.csswg.org/cssom-view/#normalize-non-finite-values\nconst nonFinite = value => {\n  if (!isFinite(value)) {\n    return 0;\n  }\n  return Number(value);\n};\nconst isConnected = node => {\n  var _a;\n  return (_a = node.isConnected) !== null && _a !== void 0 ? _a : !node.ownerDocument ||\n  // eslint-disable-next-line no-bitwise\n  !(node.ownerDocument.compareDocumentPosition(node) & /** DOCUMENT_POSITION_DISCONNECTED */1);\n};\nconst scrollWithOptions = (element, options, config) => {\n  var _a, _b;\n  if (!isConnected(element)) {\n    return;\n  }\n  const startX = element.scrollLeft;\n  const startY = element.scrollTop;\n  const targetX = nonFinite((_a = options.left) !== null && _a !== void 0 ? _a : startX);\n  const targetY = nonFinite((_b = options.top) !== null && _b !== void 0 ? _b : startY);\n  if (targetX === startX && targetY === startY) {\n    return;\n  }\n  const fallback = backupMethod(HTMLElement.prototype, \"scroll\", elementScrollXY);\n  const method = backupMethod(Object.getPrototypeOf(element), \"scroll\", fallback).bind(element);\n  if (options.behavior !== \"smooth\") {\n    method(targetX, targetY);\n    return;\n  }\n  const removeEventListener = () => {\n    window.removeEventListener(\"wheel\", cancelScroll);\n    window.removeEventListener(\"touchmove\", cancelScroll);\n  };\n  const callback = () => {\n    removeEventListener();\n    const isDocument = element.nodeType === /** Node.DOCUMENT_NODE */9;\n    element.dispatchEvent(scrollEndEvent(isDocument));\n  };\n  const context = Object.assign(Object.assign({}, config), {\n    timeStamp: now(),\n    startX,\n    startY,\n    targetX,\n    targetY,\n    rafId: 0,\n    method,\n    callback\n  });\n  const cancelScroll = () => {\n    window.cancelAnimationFrame(context.rafId);\n    removeEventListener();\n  };\n  window.addEventListener(\"wheel\", cancelScroll, {\n    passive: true,\n    once: true\n  });\n  window.addEventListener(\"touchmove\", cancelScroll, {\n    passive: true,\n    once: true\n  });\n  step(context);\n};\nconst isWindow = obj => obj.window === obj;\nconst createScroll = scrollName => (target, scrollOptions, config) => {\n  const [element, scrollType] = isWindow(target) ? [scrollingElement(target.document.documentElement), \"Window\"] : [target, \"Element\"];\n  const options = scrollOptions !== null && scrollOptions !== void 0 ? scrollOptions : {};\n  if (!isObject(options)) {\n    throw new TypeError(failedExecute(scrollName, scrollType));\n  }\n  if (!checkBehavior(options.behavior)) {\n    throw new TypeError(failedExecuteInvalidEnumValue(scrollName, scrollType, options.behavior));\n  }\n  if (scrollName === \"scrollBy\") {\n    options.left = nonFinite(options.left) + element.scrollLeft;\n    options.top = nonFinite(options.top) + element.scrollTop;\n  }\n  scrollWithOptions(element, options, config);\n};\nexport const scroll = /* #__PURE__ */createScroll(\"scroll\");\nexport const scrollTo = /* #__PURE__ */createScroll(\"scrollTo\");\nexport const scrollBy = /* #__PURE__ */createScroll(\"scrollBy\");\nexport const elementScroll = scroll;\nexport const elementScrollTo = scrollTo;\nexport const elementScrollBy = scrollBy;\nexport const windowScroll = scroll;\nexport const windowScrollTo = scrollTo;\nexport const windowScrollBy = scrollBy;","map":{"version":3,"mappings":"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","names":["backupMethod","checkBehavior","elementScrollXY","failedExecute","failedExecuteInvalidEnumValue","isObject","scrollingElement","scrollEndEvent","now","step","nonFinite","value","isFinite","Number","isConnected","node","ownerDocument","compareDocumentPosition","scrollWithOptions","element","options","config","startX","scrollLeft","startY","scrollTop","targetX","left","targetY","top","fallback","HTMLElement","prototype","method","Object","getPrototypeOf","bind","behavior","removeEventListener","window","cancelScroll","callback","isDocument","nodeType","dispatchEvent","context","timeStamp","rafId","cancelAnimationFrame","addEventListener","passive","once","isWindow","obj","createScroll","scrollName","target","scrollOptions","scrollType","document","documentElement","TypeError","scroll","scrollTo","scrollBy","elementScroll","elementScrollTo","elementScrollBy","windowScroll","windowScrollTo","windowScrollBy"],"sources":["/Users/yiningmao/Desktop/DreamVideo/my-app/node_modules/seamless-scroll-polyfill/src/scroll.ts"],"sourcesContent":["import {\n    backupMethod,\n    checkBehavior,\n    elementScrollXY,\n    failedExecute,\n    failedExecuteInvalidEnumValue,\n    isObject,\n    scrollingElement,\n} from \"./common.js\";\nimport { scrollEndEvent } from \"./scroll-end-event.js\";\nimport type { IContext, IScrollConfig } from \"./scroll-step\";\nimport { now, step } from \"./scroll-step.js\";\n\n// https://drafts.csswg.org/cssom-view/#normalize-non-finite-values\nconst nonFinite = (value: unknown): number => {\n    if (!isFinite(value as number)) {\n        return 0;\n    }\n    return Number(value);\n};\n\nconst isConnected = (node: Node) => {\n    return (\n        node.isConnected ??\n        (!node.ownerDocument ||\n            // eslint-disable-next-line no-bitwise\n            !(node.ownerDocument.compareDocumentPosition(node) & /** DOCUMENT_POSITION_DISCONNECTED */ 1))\n    );\n};\n\nconst scrollWithOptions = (element: Element, options: Readonly<ScrollToOptions>, config?: IScrollConfig): void => {\n    if (!isConnected(element)) {\n        return;\n    }\n\n    const startX = element.scrollLeft;\n    const startY = element.scrollTop;\n\n    const targetX = nonFinite(options.left ?? startX);\n    const targetY = nonFinite(options.top ?? startY);\n\n    if (targetX === startX && targetY === startY) {\n        return;\n    }\n\n    const fallback = backupMethod(HTMLElement.prototype, \"scroll\", elementScrollXY);\n    const method = backupMethod(Object.getPrototypeOf(element) as Element, \"scroll\", fallback).bind(element);\n\n    if (options.behavior !== \"smooth\") {\n        method(targetX, targetY);\n        return;\n    }\n\n    const removeEventListener = () => {\n        window.removeEventListener(\"wheel\", cancelScroll);\n        window.removeEventListener(\"touchmove\", cancelScroll);\n    };\n\n    const callback = () => {\n        removeEventListener();\n        const isDocument = element.nodeType === /** Node.DOCUMENT_NODE */ 9;\n        element.dispatchEvent(scrollEndEvent(isDocument));\n    };\n\n    const context: IContext = {\n        ...config,\n        timeStamp: now(),\n        startX,\n        startY,\n        targetX,\n        targetY,\n        rafId: 0,\n        method,\n        callback,\n    };\n\n    const cancelScroll = () => {\n        window.cancelAnimationFrame(context.rafId);\n        removeEventListener();\n    };\n\n    window.addEventListener(\"wheel\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n    window.addEventListener(\"touchmove\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n\n    step(context);\n};\n\nconst isWindow = (obj: unknown): obj is Window => (obj as Window).window === obj;\n\ntype ScrollMethod<T extends Element | typeof window> = (\n    target: T,\n    scrollOptions?: ScrollToOptions,\n    config?: IScrollConfig,\n) => void;\n\nconst createScroll =\n    <T extends Element | typeof window>(scrollName: \"scroll\" | \"scrollTo\" | \"scrollBy\"): ScrollMethod<T> =>\n    (target, scrollOptions, config): void => {\n        const [element, scrollType]: [Element, \"Window\" | \"Element\"] = isWindow(target)\n            ? [scrollingElement(target.document.documentElement), \"Window\"]\n            : [target, \"Element\"];\n\n        const options = scrollOptions ?? {};\n\n        if (!isObject(options)) {\n            throw new TypeError(failedExecute(scrollName, scrollType));\n        }\n\n        if (!checkBehavior(options.behavior)) {\n            throw new TypeError(failedExecuteInvalidEnumValue(scrollName, scrollType, options.behavior));\n        }\n\n        if (scrollName === \"scrollBy\") {\n            options.left = nonFinite(options.left) + element.scrollLeft;\n            options.top = nonFinite(options.top) + element.scrollTop;\n        }\n\n        scrollWithOptions(element, options, config);\n    };\n\nexport const scroll = /* #__PURE__ */ createScroll(\"scroll\");\nexport const scrollTo = /* #__PURE__ */ createScroll(\"scrollTo\");\nexport const scrollBy = /* #__PURE__ */ createScroll(\"scrollBy\");\n\nexport const elementScroll = scroll as ScrollMethod<Element>;\nexport const elementScrollTo = scrollTo as ScrollMethod<Element>;\nexport const elementScrollBy = scrollBy as ScrollMethod<Element>;\n\nexport const windowScroll = scroll as ScrollMethod<typeof window>;\nexport const windowScrollTo = scrollTo as ScrollMethod<typeof window>;\nexport const windowScrollBy = scrollBy as ScrollMethod<typeof window>;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}