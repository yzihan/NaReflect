{"ast":null,"code":"const ease = k => {\n  return 0.5 * (1 - Math.cos(Math.PI * k));\n};\n/* eslint-disable */\nexport function now() {\n  var _a;\n  let fn;\n  if ((_a = window.performance) === null || _a === void 0 ? void 0 : _a.now) {\n    fn = () => window.performance.now();\n  } else {\n    fn = () => window.Date.now();\n  }\n  // @ts-ignore\n  now = fn;\n  return fn();\n}\n/* eslint-enable */\nconst DURATION = 500;\nexport const step = context => {\n  const currentTime = now();\n  const elapsed = (currentTime - context.timeStamp) / (context.duration || DURATION);\n  if (elapsed > 1) {\n    context.method(context.targetX, context.targetY);\n    context.callback();\n    return;\n  }\n  const value = (context.timingFunc || ease)(elapsed);\n  const currentX = context.startX + (context.targetX - context.startX) * value;\n  const currentY = context.startY + (context.targetY - context.startY) * value;\n  context.method(currentX, currentY);\n  context.rafId = window.requestAnimationFrame(() => {\n    step(context);\n  });\n};","map":{"version":3,"mappings":"AAiBA,MAAMA,IAAI,GAAIC,CAAS,IAAI;EACvB,OAAO,GAAG,IAAI,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,EAAE,GAAGH,CAAC,CAAC,CAAC;AAC5C,CAAC;AAED;AACA,OAAM,SAAUI,GAAG;;EACf,IAAIC,EAAgB;EACpB,IAAI,YAAM,CAACC,WAAW,0CAAEF,GAAG,EAAE;IACzBC,EAAE,GAAG,MAAME,MAAM,CAACD,WAAW,CAACF,GAAG,EAAE;GACtC,MAAM;IACHC,EAAE,GAAG,MAAME,MAAM,CAACC,IAAI,CAACJ,GAAG,EAAE;;EAGhC;EACAA,GAAG,GAAGC,EAAE;EACR,OAAOA,EAAE,EAAE;AACf;AACA;AAEA,MAAMI,QAAQ,GAAG,GAAG;AAEpB,OAAO,MAAMC,IAAI,GAAIC,OAAiB,IAAU;EAC5C,MAAMC,WAAW,GAAGR,GAAG,EAAE;EAEzB,MAAMS,OAAO,GAAG,CAACD,WAAW,GAAGD,OAAO,CAACG,SAAS,KAAKH,OAAO,CAACI,QAAQ,IAAIN,QAAQ,CAAC;EAClF,IAAII,OAAO,GAAG,CAAC,EAAE;IACbF,OAAO,CAACK,MAAM,CAACL,OAAO,CAACM,OAAO,EAAEN,OAAO,CAACO,OAAO,CAAC;IAChDP,OAAO,CAACQ,QAAQ,EAAE;IAClB;;EAEJ,MAAMC,KAAK,GAAG,CAACT,OAAO,CAACU,UAAU,IAAItB,IAAI,EAAEc,OAAO,CAAC;EAEnD,MAAMS,QAAQ,GAAGX,OAAO,CAACY,MAAM,GAAG,CAACZ,OAAO,CAACM,OAAO,GAAGN,OAAO,CAACY,MAAM,IAAIH,KAAK;EAC5E,MAAMI,QAAQ,GAAGb,OAAO,CAACc,MAAM,GAAG,CAACd,OAAO,CAACO,OAAO,GAAGP,OAAO,CAACc,MAAM,IAAIL,KAAK;EAE5ET,OAAO,CAACK,MAAM,CAACM,QAAQ,EAAEE,QAAQ,CAAC;EAElCb,OAAO,CAACe,KAAK,GAAGnB,MAAM,CAACoB,qBAAqB,CAAC,MAAK;IAC9CjB,IAAI,CAACC,OAAO,CAAC;EACjB,CAAC,CAAC;AACN,CAAC","names":["ease","k","Math","cos","PI","now","fn","performance","window","Date","DURATION","step","context","currentTime","elapsed","timeStamp","duration","method","targetX","targetY","callback","value","timingFunc","currentX","startX","currentY","startY","rafId","requestAnimationFrame"],"sources":["/Users/yiningmao/Desktop/DreamVideo/my-app/node_modules/seamless-scroll-polyfill/src/scroll-step.ts"],"sourcesContent":["export interface IScrollConfig {\n    readonly duration?: number;\n    readonly forcePolyfill?: boolean;\n    readonly timingFunc?: (k: number) => number;\n}\n\nexport interface IContext extends IScrollConfig {\n    readonly timeStamp: number;\n    readonly startX: number;\n    readonly startY: number;\n    readonly targetX: number;\n    readonly targetY: number;\n    readonly method: (x: number, y: number) => void;\n    readonly callback: () => void;\n    rafId: number;\n}\n\nconst ease = (k: number) => {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n};\n\n/* eslint-disable */\nexport function now(): number {\n    let fn: () => number;\n    if (window.performance?.now) {\n        fn = () => window.performance.now();\n    } else {\n        fn = () => window.Date.now();\n    }\n\n    // @ts-ignore\n    now = fn;\n    return fn();\n}\n/* eslint-enable */\n\nconst DURATION = 500;\n\nexport const step = (context: IContext): void => {\n    const currentTime = now();\n\n    const elapsed = (currentTime - context.timeStamp) / (context.duration || DURATION);\n    if (elapsed > 1) {\n        context.method(context.targetX, context.targetY);\n        context.callback();\n        return;\n    }\n    const value = (context.timingFunc || ease)(elapsed);\n\n    const currentX = context.startX + (context.targetX - context.startX) * value;\n    const currentY = context.startY + (context.targetY - context.startY) * value;\n\n    context.method(currentX, currentY);\n\n    context.rafId = window.requestAnimationFrame(() => {\n        step(context);\n    });\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}