{"ast":null,"code":"import { backupMethod, isObject, isScrollBehaviorSupported, modifyPrototypes } from \"./common.js\";\nimport { elementScrollIntoView } from \"./scrollIntoView.js\";\nfunction elementScrollIntoViewBoolean(alignToTop) {\n  elementScrollIntoView(this, {\n    block: (alignToTop !== null && alignToTop !== void 0 ? alignToTop : true) ? \"start\" : \"end\",\n    inline: \"nearest\"\n  });\n}\nexport const elementScrollIntoViewPolyfill = config => {\n  if (isScrollBehaviorSupported(config)) {\n    return;\n  }\n  const originalFunc = backupMethod(window.HTMLElement.prototype, \"scrollIntoView\", elementScrollIntoViewBoolean);\n  modifyPrototypes(\"scrollIntoView\", function scrollIntoView() {\n    const args = arguments;\n    const options = args[0];\n    if (args.length === 1 && isObject(options)) {\n      elementScrollIntoView(this, options, config);\n      return;\n    }\n    originalFunc.apply(this, args);\n  });\n};","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,EAAEC,QAAQ,EAAEC,yBAAyB,EAAEC,gBAAgB,QAAQ,aAAa;AAEjG,SAASC,qBAAqB,QAAQ,qBAAqB;AAE3D,SAASC,4BAA4B,CAAgBC,UAAoB;EACrEF,qBAAqB,CAAC,IAAI,EAAE;IACxBG,KAAK,EAAE,WAAU,aAAVD,UAAU,cAAVA,UAAU,GAAI,IAAI,IAAG,OAAO,GAAG,KAAK;IAC3CE,MAAM,EAAE;GACX,CAAC;AACN;AAEA,OAAO,MAAMC,6BAA6B,GAAIC,MAAsB,IAAU;EAC1E,IAAIR,yBAAyB,CAACQ,MAAM,CAAC,EAAE;IACnC;;EAGJ,MAAMC,YAAY,GAAGX,YAAY,CAACY,MAAM,CAACC,WAAW,CAACC,SAAS,EAAE,gBAAgB,EAAET,4BAA4B,CAAC;EAE/GF,gBAAgB,CAAC,gBAAgB,EAAE,SAASY,cAAc;IACtD,MAAMC,IAAI,GAAGC,SAAS;IACtB,MAAMC,OAAO,GAAGF,IAAI,CAAC,CAAC,CAAY;IAElC,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,IAAIlB,QAAQ,CAACiB,OAAO,CAAC,EAAE;MACxCd,qBAAqB,CAAC,IAAI,EAAEc,OAAgC,EAAER,MAAM,CAAC;MACrE;;IAGJC,YAAY,CAACS,KAAK,CAAC,IAAI,EAAEJ,IAAa,CAAC;EAC3C,CAAC,CAAC;AACN,CAAC","names":["backupMethod","isObject","isScrollBehaviorSupported","modifyPrototypes","elementScrollIntoView","elementScrollIntoViewBoolean","alignToTop","block","inline","elementScrollIntoViewPolyfill","config","originalFunc","window","HTMLElement","prototype","scrollIntoView","args","arguments","options","length","apply"],"sources":["/Users/yiningmao/Desktop/DreamVideo/my-app/node_modules/seamless-scroll-polyfill/src/scrollIntoView.polyfill.ts"],"sourcesContent":["import { backupMethod, isObject, isScrollBehaviorSupported, modifyPrototypes } from \"./common.js\";\nimport type { IScrollConfig } from \"./scroll-step\";\nimport { elementScrollIntoView } from \"./scrollIntoView.js\";\n\nfunction elementScrollIntoViewBoolean(this: Element, alignToTop?: unknown) {\n    elementScrollIntoView(this, {\n        block: alignToTop ?? true ? \"start\" : \"end\",\n        inline: \"nearest\",\n    });\n}\n\nexport const elementScrollIntoViewPolyfill = (config?: IScrollConfig): void => {\n    if (isScrollBehaviorSupported(config)) {\n        return;\n    }\n\n    const originalFunc = backupMethod(window.HTMLElement.prototype, \"scrollIntoView\", elementScrollIntoViewBoolean);\n\n    modifyPrototypes(\"scrollIntoView\", function scrollIntoView(this: Element): void {\n        const args = arguments;\n        const options = args[0] as unknown;\n\n        if (args.length === 1 && isObject(options)) {\n            elementScrollIntoView(this, options as ScrollIntoViewOptions, config);\n            return;\n        }\n\n        originalFunc.apply(this, args as never);\n    });\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}