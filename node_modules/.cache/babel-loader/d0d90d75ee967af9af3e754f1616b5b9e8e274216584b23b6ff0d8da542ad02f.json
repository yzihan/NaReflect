{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fairy\\\\Documents\\\\GitHub\\\\NaReflect\\\\src\\\\pages\\\\Account.js\",\n  _s = $RefreshSig$();\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport React, { useRef, useState } from \"react\";\nimport FileInput from \"../components/FileInput\";\nimport ImageCropper from \"../components/ImageCropper\";\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\nimport map from \"lodash/map\";\nimport range from \"lodash/range\";\nimport { ScrollBox, ScrollAxes, FastTrack } from 'react-scroll-box';\nimport edit from '../components/pencil.png';\nimport man from '../components/man.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Account = () => {\n  _s();\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n  const titles = ['Party', 'No bustle', 'Bitten'];\n  const descriptions = ['I find myself on a beach, with many beachfront mansions nearby. My friends and I decide we ...', 'In my dream, as usual, I woke up early. I had breakfast. I came out of the door with ...', 'It was like the zombie apocalypse but slower, calmer. Everyone was sequestered into ...'];\n  const [names, setNames] = useState(['']);\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert('output' + e);\n  };\n  const [images, setImages] = useState(['']);\n  const [currentId, setCurrentId] = useState(0);\n  const [currentPage, setCurrentPage] = useState(-1); //choose-img:-1, crop-img: idx\n  const [imgAfterCrops, setImgAfterCrops] = useState(['']);\n  // Invoked when new image file is selected\n  const onImageSelected = (selectedImg, itemId) => {\n    const newImages = images.map((s, i) => {\n      if (i === itemId) {\n        return selectedImg;\n      } else {\n        return s;\n      }\n    });\n    setImages(newImages);\n    setCurrentPage(itemId);\n  };\n\n  // Generating Cropped Image When Done Button Clicked\n  function onCropDone(imgCroppedArea, itemId) {\n    //alert('oncropdone page:'+currentPage);\n    const canvasEle = document.createElement(\"canvas\");\n    canvasEle.width = imgCroppedArea.width;\n    canvasEle.height = imgCroppedArea.height;\n    const context = canvasEle.getContext(\"2d\");\n    let imageObj1 = new Image();\n    imageObj1.src = images[itemId];\n    imageObj1.onload = function () {\n      context.drawImage(imageObj1, imgCroppedArea.x, imgCroppedArea.y, imgCroppedArea.width, imgCroppedArea.height, 0, 0, imgCroppedArea.width, imgCroppedArea.height);\n      const dataURL = canvasEle.toDataURL(\"image/jpeg\");\n      /*\r\n      var a = document.createElement('a');\r\n      a.href = dataURL;\r\n      a.download = '../test_img.png';\r\n      document.body.appendChild(a);\r\n      a.click();*/\n      const newImgAfterCrops = imgAfterCrops.map((s, i) => {\n        if (i === currentPage) {\n          return dataURL;\n        } else {\n          return s;\n        }\n      });\n      setImgAfterCrops(newImgAfterCrops);\n      //alert('oncropdone:'+currentPage)\n      setCurrentPage(-1);\n    };\n  }\n  ;\n\n  // Handle Cancel Button Click\n  function onCropCancel(itemId) {\n    setCurrentPage(-1);\n    const newImages = images.map((s, i) => {\n      if (i === itemId) {\n        return '';\n      } else {\n        return s;\n      }\n    });\n    setImages(newImages);\n  }\n  ;\n  const inputRef = useRef();\n  function handleOnChanges(e, itemId) {\n    if (e && e.length > 0) {\n      const reader = new FileReader();\n      reader.readAsDataURL(e[0]);\n      reader.onload = function () {\n        onImageSelected(reader.result, itemId);\n      };\n    }\n  }\n  ;\n  const onChooseImg = () => {\n    inputRef.current.click();\n  };\n  const addChar = () => {\n    setNames([...names, '']);\n    setImages([...images, '']);\n    setImgAfterCrops([...imgAfterCrops, '']);\n  };\n  function handleNames(e, itemId) {\n    const newNames = names.map((s, i) => {\n      if (i === itemId) {\n        return e;\n      } else {\n        return s;\n      }\n    });\n    setNames(newNames);\n  }\n  const Card = _ref => {\n    let {\n      itemId\n    } = _ref;\n    //alert('id:'+id.target);\n    //const itemId = '0';\n    //alert(titles[itemId]);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      style: {\n        minHeight: '60px',\n        width: '30%',\n        textAlign: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file\",\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"input-title\",\n          style: {\n            textAlign: 'left'\n          },\n          children: titles[itemId]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: edit,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: video,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"input-text\",\n          style: {\n            textAlign: 'left',\n            marginTop: '-15px',\n            fontSize: '18px',\n            color: '#777777',\n            lineHeight: '115%'\n          },\n          children: descriptions[itemId]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  };\n  const CharCard = _ref2 => {\n    let {\n      itemId\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"file\",\n        style: {\n          height: '110px',\n          width: '110px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"input-title\",\n        style: {\n          color: '#FFFFFF'\n        },\n        children: [\"Char \", itemId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  };\n  const CharImgCard = _ref3 => {\n    let {\n      itemId\n    } = _ref3;\n    var top_offset = Math.floor(itemId / 3) * 160 + 130;\n    //alert(itemId+', '+currentId);\n    //setCurrentId(itemId);\n    //alert(itemId)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        style: {\n          height: '400px',\n          width: '400px',\n          position: 'fixed',\n          top: '20%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              ref: inputRef,\n              onChange: e => handleOnChanges(e.target.files, itemId),\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), imgAfterCrops[itemId] === '' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"image-box\",\n              style: {\n                position: 'fixed',\n                top: top_offset,\n                fontSize: '24px',\n                color: '#777777',\n                paddingLeft: '26px',\n                paddingTop: '34px',\n                backgroundColor: 'rgba(0,0,0,0.4)'\n              },\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgAfterCrops[itemId],\n              className: \"image-box\",\n              style: {\n                position: 'fixed',\n                top: top_offset.toString() + 'px',\n                objectFit: 'cover',\n                objectPosition: '0% 0%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"image-box\",\n              onClick: onChooseImg,\n              style: {\n                position: 'fixed',\n                top: top_offset.toString() + 'px',\n                backgroundColor: 'rgba(0,0,0,0)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-box\",\n            type: \"text\",\n            style: {\n              color: '#FFFFFF',\n              backgroundColor: 'rgba(0,0,0,0)',\n              border: 'None',\n              position: 'relative',\n              top: (top_offset - 45).toString() + 'px',\n              textAlign: 'center',\n              left: '-125px',\n              width: '160px',\n              marginTop: '0px'\n            },\n            value: names[itemId],\n            placeholder: \"Name\",\n            onChange: e => handleNames(e.target.value, itemId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    style: {\n      textAlign: 'left'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      style: {\n        width: '50%',\n        textAlign: 'left'\n      },\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inte-form\",\n        style: {\n          height: '500px',\n          width: '500px',\n          marginTop: '250px',\n          marginBottom: '100px',\n          overflow: 'scroll'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input title\",\n          style: {\n            textAlign: 'center',\n            fontSize: '30px'\n          },\n          children: \"Gallery.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: {\n            textAlign: 'left'\n          },\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            style: {\n              minHeight: '60px',\n              width: '50%',\n              textAlign: 'left'\n            },\n            children: Card({\n              itemId: index\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      style: {\n        width: '50%',\n        textAlign: 'right',\n        transform: 'translate(9%, 0)'\n      },\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"inte-form\",\n        style: {\n          background: 'rgba(0,0,0, 0.5)',\n          height: '700px',\n          width: '500px',\n          paddingTop: '20px',\n          marginTop: '50px',\n          marginBottom: '100px',\n          overflow: 'scroll'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input title\",\n          style: {\n            textAlign: 'center',\n            fontSize: '30px',\n            color: '#FFFFFF',\n            marginBottom: '20px'\n          },\n          children: \"Character Portraits.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: names.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            style: {\n              minHeight: '60px',\n              width: '33%',\n              textAlign: 'left'\n            },\n            children: CharImgCard({\n              itemId: index\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), currentPage !== -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          style: {\n            position: 'absolute',\n            height: '650px',\n            width: '450px',\n            marginTop: '100px',\n            marginBottom: '100px',\n            textAlign: 'center',\n            transform: 'translate(-2%, -12%)'\n          },\n          children: /*#__PURE__*/_jsxDEV(ImageCropper, {\n            image: images[currentPage],\n            onCropDone: e => onCropDone(e, currentPage),\n            onCropCancel: e => onCropCancel(currentPage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), currentPage === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button-light\",\n          onClick: () => addChar(),\n          style: {\n            position: 'absolute',\n            left: '40%',\n            top: '75%',\n            marginLeft: '30px'\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(Account, \"/ZuMjCx+9u3/cb2LVJrOIhriHnc=\", false, function () {\n  return [useNavigate];\n});\n_c = Account;\nexport default Account;\n\n/*}*/\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["Link","RouterLink","useNavigate","React","useRef","useState","FileInput","ImageCropper","Col","Form","Row","ScrollMenu","VisibilityContext","map","range","ScrollBox","ScrollAxes","FastTrack","edit","man","Account","items","titles","descriptions","names","setNames","navigate","handleSubmit","e","preventDefault","alert","images","setImages","currentId","setCurrentId","currentPage","setCurrentPage","imgAfterCrops","setImgAfterCrops","onImageSelected","selectedImg","itemId","newImages","s","i","onCropDone","imgCroppedArea","canvasEle","document","createElement","width","height","context","getContext","imageObj1","Image","src","onload","drawImage","x","y","dataURL","toDataURL","newImgAfterCrops","onCropCancel","inputRef","handleOnChanges","length","reader","FileReader","readAsDataURL","result","onChooseImg","current","click","addChar","handleNames","newNames","Card","minHeight","textAlign","video","marginTop","fontSize","color","lineHeight","CharCard","CharImgCard","top_offset","Math","floor","position","top","target","files","display","paddingLeft","paddingTop","backgroundColor","toString","objectFit","objectPosition","border","left","value","marginBottom","overflow","item","index","transform","background","marginLeft"],"sources":["C:/Users/fairy/Documents/GitHub/NaReflect/src/pages/Account.js"],"sourcesContent":["import { Link as RouterLink, useNavigate} from 'react-router-dom';\r\nimport React, { useRef, useState } from \"react\";\r\nimport FileInput from \"../components/FileInput\";\r\nimport ImageCropper from \"../components/ImageCropper\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ScrollMenu, VisibilityContext } from 'react-horizontal-scrolling-menu';\r\nimport map from \"lodash/map\";\r\nimport range from \"lodash/range\";\r\nimport {ScrollBox, ScrollAxes, FastTrack} from 'react-scroll-box';\r\nimport edit from '../components/pencil.png';\r\nimport man from '../components/man.jpg';\r\n\r\n\r\nconst Account = () => {\r\n    const items=['Item 1', 'Item 2', 'Item 3'];\r\n    const titles = ['Party', 'No bustle', 'Bitten'];\r\n    const descriptions = ['I find myself on a beach, with many beachfront mansions nearby. My friends and I decide we ...',\r\n                                'In my dream, as usual, I woke up early. I had breakfast. I came out of the door with ...',\r\n                                'It was like the zombie apocalypse but slower, calmer. Everyone was sequestered into ...'];\r\n    const [names, setNames] = useState(['']);\r\n    const navigate = useNavigate();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        alert('output'+e);\r\n    }\r\n\r\n    const [images, setImages] = useState(['']);\r\n    const [currentId, setCurrentId] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(-1); //choose-img:-1, crop-img: idx\r\n    const [imgAfterCrops, setImgAfterCrops] = useState(['']);\r\n    // Invoked when new image file is selected\r\n    const onImageSelected = (selectedImg, itemId) => {\r\n        const newImages = images.map((s,i) => {if(i===itemId){return selectedImg;}else{return s;}});\r\n        setImages(newImages);\r\n        setCurrentPage(itemId);\r\n    };\r\n\r\n    // Generating Cropped Image When Done Button Clicked\r\n    function onCropDone(imgCroppedArea, itemId) {\r\n        //alert('oncropdone page:'+currentPage);\r\n        const canvasEle = document.createElement(\"canvas\");\r\n        canvasEle.width = imgCroppedArea.width;\r\n        canvasEle.height = imgCroppedArea.height;\r\n\r\n        const context = canvasEle.getContext(\"2d\");\r\n\r\n        let imageObj1 = new Image();\r\n        imageObj1.src = images[itemId];\r\n        imageObj1.onload = function () {\r\n        context.drawImage(\r\n            imageObj1,\r\n            imgCroppedArea.x,\r\n            imgCroppedArea.y,\r\n            imgCroppedArea.width,\r\n            imgCroppedArea.height,\r\n            0,\r\n            0,\r\n            imgCroppedArea.width,\r\n            imgCroppedArea.height\r\n        );\r\n\r\n        const dataURL = canvasEle.toDataURL(\"image/jpeg\");\r\n        /*\r\n        var a = document.createElement('a');\r\n        a.href = dataURL;\r\n        a.download = '../test_img.png';\r\n        document.body.appendChild(a);\r\n        a.click();*/\r\n        const newImgAfterCrops = imgAfterCrops.map((s,i) => {if(i===currentPage){return dataURL;}else{return s;}});\r\n        setImgAfterCrops(newImgAfterCrops);\r\n        //alert('oncropdone:'+currentPage)\r\n        setCurrentPage(-1);\r\n\r\n        };\r\n    };\r\n\r\n    // Handle Cancel Button Click\r\n    function onCropCancel(itemId) {\r\n        setCurrentPage(-1);\r\n        const newImages = images.map((s,i) => {if(i===itemId){return '';}else{return s;}});\r\n        setImages(newImages);\r\n    };\r\n\r\n    const inputRef = useRef();\r\n\r\n    function handleOnChanges(e, itemId) {\r\n        if (e && e.length > 0) {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(e[0]);\r\n\r\n        reader.onload = function () {\r\n            onImageSelected(reader.result, itemId);\r\n        };\r\n        }\r\n    };\r\n\r\n    const onChooseImg = () => {\r\n        inputRef.current.click();\r\n    };\r\n\r\n    const addChar = () => {\r\n\r\n        setNames([...names, '']);\r\n        setImages([...images, '']);\r\n        setImgAfterCrops([...imgAfterCrops, '']);\r\n\r\n    }\r\n\r\n\r\n\r\n    function handleNames(e, itemId) {\r\n        const newNames = names.map((s,i) => {if(i===itemId){return e;}else{return s;}});\r\n        setNames(newNames);\r\n    }\r\n\r\n\r\n    const Card = ({itemId}) => {\r\n        //alert('id:'+id.target);\r\n        //const itemId = '0';\r\n        //alert(titles[itemId]);\r\n\r\n        return (\r\n            <div className='column' style={{minHeight:'60px', width:'30%', textAlign:'left',}}>\r\n                <div className='file' >\r\n                    <text className='input-title' style={{textAlign:'left'}}>{titles[itemId]}</text>\r\n                    <div style={{width: '100%'}}>\r\n                        <img src={edit} className='icon'/>\r\n                        <img src={video} className='icon'/>\r\n                    </div>\r\n                    <text className='input-text' style={{textAlign:'left', marginTop:'-15px', fontSize:'18px', color:'#777777', lineHeight:'115%'}}>{descriptions[itemId]}</text>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const CharCard = ({itemId}) => {\r\n        return (\r\n            <div class='row' style={{textAlign:'center', }}>\r\n                <form className='file' style={{height:'110px', width:'110px'}}>\r\n                </form>\r\n                <text className='input-title' style={{color:'#FFFFFF'}}>Char {itemId}</text>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const CharImgCard = ({itemId}) => {\r\n        var top_offset = Math.floor(itemId/3) * 160+130;\r\n        //alert(itemId+', '+currentId);\r\n        //setCurrentId(itemId);\r\n        //alert(itemId)\r\n        return (\r\n        <div>\r\n            <div className=\"input-container\" style={{ height:'400px', width:'400px', position:'fixed', top:'20%'}}>\r\n            <div class='row' style={{textAlign:'center', }}>\r\n                <div>\r\n                <input type=\"file\" accept=\"image/*\" ref={inputRef} onChange={(e) => handleOnChanges(e.target.files, itemId)} style={{ display: \"none\" }}  />\r\n                {imgAfterCrops[itemId] === ''? (\r\n                    <button className=\"image-box\" style={{position:'fixed', top:top_offset, fontSize:'24px', color:'#777777', paddingLeft:'26px', paddingTop:'34px', backgroundColor: 'rgba(0,0,0,0.4)'}}>Photo</button>\r\n                ): (\r\n                    <img src={imgAfterCrops[itemId]}  className=\"image-box\" style={{position:'fixed', top:top_offset.toString()+'px', objectFit:'cover', objectPosition:'0% 0%'}}/>\r\n                )}\r\n                <button className=\"image-box\" onClick={onChooseImg} style={{position:'fixed', top:top_offset.toString()+'px', backgroundColor: 'rgba(0,0,0,0)'}}></button>\r\n                </div>\r\n            <input className='input-box' type='text' style={{color:'#FFFFFF', backgroundColor: 'rgba(0,0,0,0)', border:'None', position:'relative', top:(top_offset-45).toString()+'px', textAlign:'center', left:'-125px', width:'160px', marginTop:'0px'}} value={names[itemId]} placeholder='Name' onChange={(e) => handleNames(e.target.value, itemId)} />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='input-container' style={{textAlign:'left'}}>\r\n            <div className='column' style={{width:'50%', textAlign:'left', }} onSubmit={handleSubmit}>\r\n                <div className='inte-form' style={{height:'500px', width:'500px', marginTop:'250px', marginBottom:'100px', overflow:'scroll'}}>\r\n                <label className='input title' style={{textAlign:'center', fontSize:'30px'}}>Gallery.</label>\r\n                <div className='row' style={{textAlign:'left' }}>\r\n                    {items.map((item, index) => (\r\n                        <div className='column' style={{minHeight:'60px', width:'50%', textAlign:'left',}}>{Card( {itemId:index}) }</div>\r\n                    ))}\r\n                     </div>\r\n                </div>\r\n            </div>\r\n            <div className='column' style={{width:'50%', textAlign:'right', transform:'translate(9%, 0)'}} onSubmit={handleSubmit}>\r\n                <div class='inte-form' style={{background: 'rgba(0,0,0, 0.5)', height:'700px', width:'500px', paddingTop:'20px', marginTop:'50px', marginBottom:'100px', overflow:'scroll'}}>\r\n                    <label className='input title' style={{textAlign:'center', fontSize:'30px', color:'#FFFFFF', marginBottom:'20px'}}>Character Portraits.</label>\r\n                        <div class='row'>\r\n                            {names.map((item, index) => (\r\n                                <div className='column' style={{minHeight:'60px', width:'33%', textAlign:'left',}}>{CharImgCard( {itemId:index}) }</div>\r\n                            ))}\r\n                        </div>\r\n                        {currentPage !== -1 ? (\r\n                            <div className=\"input-container\" style={{position:'absolute', height:'650px', width:'450px', marginTop:'100px', marginBottom:'100px',textAlign:'center', transform:'translate(-2%, -12%)'}}>\r\n                            <ImageCropper\r\n                            image={images[currentPage]}\r\n                            onCropDone={(e) => onCropDone(e, currentPage)}\r\n                            onCropCancel={(e) => onCropCancel(currentPage)}\r\n                            />\r\n                            </div>\r\n                        ):(<></>) }\r\n                        {currentPage === -1 ?(<button type='button' className='button-light' onClick={() => addChar()} style={{position: 'absolute', left: '40%', top: '75%', marginLeft:'30px'}}>Add</button>):(<></>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n\r\n/*}*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}