{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fairy\\\\Documents\\\\GitHub\\\\NaReflect\\\\src\\\\pages\\\\Interpretation.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from \"react\";\nimport profile from '../components/profile.png';\nimport Character from \"./characters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Interpretation = props => {\n  _s();\n  //const [items] = React.useState(getItems);\n  //const scenes = ['scene1','s2','s3','s4']\n\n  const [isMapping, setMapping] = useState(false);\n  const mapping = () => {\n    setMapping(true);\n  };\n  const newChars = [];\n  const initChars = JSON.parse(window.sessionStorage.getItem('chars'));\n  for (let i = 0; i < initChars.length; i++) {\n    var char = initChars[i].split('; ');\n    newChars.push(char.map((s, i) => {\n      return s;\n    }));\n  }\n  const newActs = [];\n  var initActs = JSON.parse(window.sessionStorage.getItem('acts'));\n  for (let i = 0; i < initActs.length; i++) {\n    var act = initActs[i].split('; ');\n    newActs.push(act);\n  }\n  const [sentences, setSentences] = useState(JSON.parse(window.sessionStorage.getItem('sentences')));\n  const [chars, setChars] = useState(newChars);\n  const [scenes, setScenes] = useState(JSON.parse(window.sessionStorage.getItem('scenes')));\n  const [acts, setActs] = useState(newActs);\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert('output' + e);\n  };\n  function handleMerge(itemId) {\n    if (itemId == chars.length - 1) {\n      return;\n    }\n    const newChars = chars;\n    for (let character of chars[itemId + 1]) {\n      newChars[itemId].push(character);\n    }\n    newChars.splice(itemId + 1, 1);\n    setChars(newChars);\n    const newActs = acts.map((s, i) => {\n      if (i === itemId) {\n        return s + ' ' + acts[i + 1];\n      } else {\n        return s;\n      }\n    });\n    newActs.splice(itemId + 1, 1);\n    setActs(newActs);\n    scenes.splice(itemId + 1, 1);\n    const newSentences = sentences.map((s, i) => {\n      if (i === itemId) {\n        return s + ' ' + sentences[i + 1];\n      } else {\n        return s;\n      }\n    });\n    newSentences.splice(itemId + 1, 1);\n    setSentences(newSentences);\n  }\n  function handleAdd(itemId) {\n    chars.splice(itemId, 0, ['']);\n    acts.splice(itemId, 0, ['']);\n    scenes.splice(itemId, 0, '');\n    sentences.splice(itemId, 0, '');\n  }\n  function handleScenes(e, itemId) {\n    const newScenes = scenes.map((s, i) => {\n      if (i === itemId) {\n        return e;\n      } else {\n        return s;\n      }\n    });\n    setScenes(newScenes);\n  }\n  function handleChars(e, itemId, charId) {\n    const newChars = [];\n    for (let i = 0; i < scenes.length; i++) {\n      if (i === itemId) newChars.push(chars[i].map((s, i) => {\n        if (i === charId) {\n          return e;\n        } else {\n          return s;\n        }\n      }));else newChars.push(chars[i].map((s, i) => {\n        return s;\n      }));\n    }\n    setChars(newChars);\n    //alert(chars[itemId][charId]);\n  }\n\n  function handleActs(e, itemId, charId) {\n    const newActs = [];\n    for (let i = 0; i < scenes.length; i++) {\n      if (i === itemId) newActs.push(acts[i].map((s, i) => {\n        if (i === charId) {\n          return e;\n        } else {\n          return s;\n        }\n      }));else newActs.push(acts[i].map((s, i) => {\n        return s;\n      }));\n    }\n    setActs(newActs);\n  }\n  const SceneCard = _ref => {\n    let {\n      itemId\n    } = _ref;\n    //alert('id:'+id.target);\n    //const itemId = '0';\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '10%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc-form\",\n        style: {\n          minHeight: '120px',\n          marginTop: '0px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column\",\n            style: {\n              width: '80%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"input-text\",\n              style: {\n                textAlign: 'left',\n                fontSize: '22px'\n              },\n              children: sentences[itemId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), itemId < 3 ? /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"input-text\",\n              style: {\n                textAlign: 'left',\n                color: '#777777',\n                fontSize: '22px'\n              },\n              children: sentences[itemId + 1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 158\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column\",\n            style: {\n              width: '10%'\n            },\n            children: itemId < 3 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-dark\",\n              type: \"button\",\n              onClick: e => handleMerge(itemId),\n              style: {\n                position: 'relative',\n                left: '90%',\n                top: '0px'\n              },\n              children: \"Merge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inte-form\",\n        style: {\n          marginTop: '30px',\n          marginBottom: '120px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"body\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"column\",\n              style: {\n                width: '25%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-title\",\n                children: \"Character.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), \"=                        \", /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"column\",\n              style: {\n                width: '75%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"input-title\",\n                style: {\n                  marginLeft: '60px'\n                },\n                children: \"Scene.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [CharCard({\n              itemId: itemId,\n              chars: chars[itemId]\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n          /*\r\n          chars[itemId].map((char, index) => (\r\n              <div>{CharCard({itemId:itemId,charId:index})} </div>\r\n          ))\r\n          */]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  };\n  const CharCard = _ref2 => {\n    let {\n      itemId,\n      chars\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          width: '25%'\n        },\n        children: chars.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charWithPic pointer\",\n          onClick: () => {\n            mapping(character);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icon\",\n            src: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"input-box\",\n            children: character\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        style: {\n          width: '60%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-box-large\",\n          value: acts[itemId],\n          rows: \"5\",\n          cols: \"50\",\n          style: {\n            marginLeft: '60px',\n            width: '100%',\n            height: '127px'\n          },\n          onChange: e => handleActs(e.target.value, itemId, 0),\n          type: \"text\",\n          placeholder: \"\",\n          id: \"act\",\n          name: \"act\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      style: {\n        height: '550px',\n        width: '1200px',\n        marginTop: '20%',\n        paddingTop: '-200px',\n        marginBottom: '10%',\n        overflow: 'scroll'\n      },\n      children: scenes.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: SceneCard({\n          itemId: index\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), isMapping && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'absolute',\n        left: '0',\n        top: '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Character, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 163\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n/*\r\n<div style={{ width: \"100%\", overflow: \"auto\", display: \"flex\" }}>\r\n            {map(range(4), idx => (\r\n                <Container itemId={idx} />\r\n            ))}\r\n        </div>\r\n        */\n\n//<SceneCard itemId={index} /> <SceneCard itemId='0' chars={chars} acts={acts} scenes={scenes}/>\n/*\r\n    return (\r\n        <div className='input-container' style={{textAlign:'left'}}>\r\n            <label className='h3-light'>Information and relationship interpretation.</label>\r\n            <button className='button-light' type='submit' style={{position: 'relative', left: '70px', top: '120px'}}>Save</button>\r\n\r\n            <form className='desc-form' onSubmit={handleSubmit}>\r\n                <text className='input-text' style={{textAlign:'left'}}>{sentence}</text>\r\n                <button className='button-dark' style={{position: 'relative', left: '85%', top: '-35px'}}>Merge</button>\r\n            </form>\r\n\r\n            <form className='inte-form'>\r\n                <body>\r\n                <div class='row'>\r\n                    <div class='column' style={{width:'30%'}}>\r\n                    <label className='input-title'>Character.</label>\r\n                    <input className='input-box' value={char} style={{width:'300px'}} onChange={e => setChar(e.target.value)} type='text' placeholder='' id='char' name='char' />\r\n                    </div>\r\n                    <div class='column' style={{width:'70%'}}>\r\n                    <label className='input-title' style={{marginLeft:'60px'}}>Action.</label>\r\n                    <input className='input-box' value={act} style={{marginLeft:'60px', width:'630px'}} onChange={e => setAct(e.target.value)} type='text' placeholder='' id='act' name='act' />\r\n                    </div>\r\n                </div>\r\n                </body>\r\n                <label className='input-title' style={{marginTop:'20px'}}>Scene.</label>\r\n                <textarea className='input-box-large' value={scene} style={{height:'100px'}} onChange={e => setScene(e.target.value.replace('\\\\n', '\\n'))} rows='5' cols='50' placeholder='' id='scene' name='scene' />\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n*/\n_s(Interpretation, \"kYYo4LC6RIODoxm0wd0+vLvnWwM=\", false, function () {\n  return [useNavigate];\n});\n_c = Interpretation;\nexport default Interpretation;\nvar _c;\n$RefreshReg$(_c, \"Interpretation\");","map":{"version":3,"names":["useNavigate","React","useState","profile","Character","Interpretation","props","isMapping","setMapping","mapping","newChars","initChars","JSON","parse","window","sessionStorage","getItem","i","length","char","split","push","map","s","newActs","initActs","act","sentences","setSentences","chars","setChars","scenes","setScenes","acts","setActs","navigate","handleSubmit","e","preventDefault","alert","handleMerge","itemId","character","splice","newSentences","handleAdd","handleScenes","newScenes","handleChars","charId","handleActs","SceneCard","width","minHeight","marginTop","textAlign","fontSize","color","position","left","top","marginBottom","marginLeft","CharCard","height","target","value","paddingTop","overflow","item","index","display","justifyContent","alignItems"],"sources":["C:/Users/fairy/Documents/GitHub/NaReflect/src/pages/Interpretation.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\nimport profile from '../components/profile.png';\r\nimport Character from \"./characters\";\r\n\r\n\r\n\r\nconst Interpretation = (props) => {\r\n    //const [items] = React.useState(getItems);\r\n    //const scenes = ['scene1','s2','s3','s4']\r\n\r\n    const [isMapping, setMapping] = useState(false)\r\n\r\n    const mapping = ()=>{\r\n        setMapping(true)\r\n    }\r\n\r\n    const newChars = [];\r\n    const initChars = JSON.parse(window.sessionStorage.getItem('chars'));\r\n    for (let i=0;i<initChars.length;i++) {\r\n        var char = initChars[i].split('; ');\r\n        newChars.push(char.map((s,i) => {return s;}));\r\n    }\r\n\r\n    const newActs = [];\r\n    var initActs = JSON.parse(window.sessionStorage.getItem('acts'));\r\n    for (let i=0;i<initActs.length;i++) {\r\n        var act = initActs[i].split('; ');\r\n        newActs.push(act);\r\n    }\r\n\r\n    const [sentences, setSentences] = useState(JSON.parse(window.sessionStorage.getItem('sentences')));\r\n    const [chars, setChars] = useState(newChars);\r\n    const [scenes, setScenes] = useState(JSON.parse(window.sessionStorage.getItem('scenes')));\r\n    const [acts, setActs] = useState(newActs);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        alert('output'+e);\r\n    }\r\n    function handleMerge(itemId) {\r\n\r\n        if(itemId==chars.length-1){\r\n            return\r\n        }\r\n\r\n        const newChars = chars\r\n        for(let character of chars[itemId+1]){\r\n            newChars[itemId].push(character)\r\n        }\r\n        newChars.splice(itemId+1, 1);\r\n        setChars(newChars)\r\n\r\n        const newActs = acts.map((s,i) => {if(i===itemId){return s+' '+acts[i+1];}else{return s;}});\r\n        newActs.splice(itemId+1, 1);\r\n        setActs(newActs);\r\n\r\n        scenes.splice(itemId+1, 1);\r\n        const newSentences = sentences.map((s,i) => {if(i===itemId){return s+' '+sentences[i+1];}else{return s;}});\r\n        newSentences.splice(itemId+1, 1);\r\n        setSentences(newSentences);\r\n    }\r\n    function handleAdd(itemId) {\r\n        chars.splice(itemId, 0, ['']);\r\n        acts.splice(itemId, 0, ['']);\r\n        scenes.splice(itemId, 0, '');\r\n        sentences.splice(itemId, 0, '');\r\n    }\r\n\r\n    function handleScenes(e, itemId) {\r\n        const newScenes = scenes.map((s,i) => {if(i===itemId){return e;}else{return s;}});\r\n        setScenes(newScenes);\r\n    }\r\n    function handleChars(e, itemId, charId) {\r\n        const newChars = [];\r\n        for (let i=0;i<scenes.length;i++) {\r\n            if (i === itemId) newChars.push( chars[i].map((s,i) => {if(i===charId){return e;}else{return s;}}));\r\n            else newChars.push( chars[i].map((s,i) => {return s;}));\r\n        }\r\n        setChars(newChars);\r\n        //alert(chars[itemId][charId]);\r\n    }\r\n    function handleActs(e, itemId, charId) {\r\n        const newActs = [];\r\n        for (let i=0;i<scenes.length;i++) {\r\n            if (i === itemId) newActs.push( acts[i].map((s,i) => {if(i===charId){return e;}else{return s;}}));\r\n            else newActs.push( acts[i].map((s,i) => {return s;}));\r\n        }\r\n        setActs(newActs);\r\n    }\r\n\r\n    const SceneCard = ({itemId}) => {\r\n        //alert('id:'+id.target);\r\n        //const itemId = '0';\r\n\r\n        return (\r\n            <div style={{width:'10%'}}>\r\n                <div className='desc-form' style={{minHeight:'120px', marginTop:'0px'}}>\r\n                    <div class='row'>\r\n                        <div class='column' style={{width:'80%'}}>\r\n                        <text className='input-text' style={{textAlign:'left', fontSize:'22px'}}>{sentences[itemId]}</text>\r\n                        {itemId < 3 ? <text className='input-text' style={{textAlign:'left', color:'#777777', fontSize:'22px'}}>{sentences[itemId+1]}</text>:<text></text>}\r\n                        </div>\r\n                        <div class='column' style={{width:'10%'}}>\r\n                        {\r\n                            itemId < 3 ? <button className='button-dark' type='button' onClick = {(e) => handleMerge(itemId)} style={{position: 'relative', left: '90%', top: '0px'}}>Merge</button> : <></>\r\n                        }\r\n\r\n                        {/*<button className='button-dark' type='button' onClick = {(e) => handleAdd(itemId)} style={{position: 'relative', left: '90%', top: '-10px'}}>Add</button>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               <div className='inte-form' style={{marginTop:'30px', marginBottom:'120px'}}>\r\n                    <body>\r\n                    <div class='row'>\r\n                        <div class='column' style={{width:'25%'}}>\r\n                            <label className='input-title'>Character.</label>\r\n                        </div>\r\n=                        <div class='column' style={{width:'75%'}}>\r\n                            <label className='input-title' style={{marginLeft:'60px'}}>Scene.</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        <div>{CharCard({itemId:itemId, chars:chars[itemId]})} </div>\r\n                    /*\r\n                    chars[itemId].map((char, index) => (\r\n                        <div>{CharCard({itemId:itemId,charId:index})} </div>\r\n                    ))\r\n                    */\r\n                    }\r\n                    </body>\r\n                    {\r\n                /*\r\n                    <label className='input-title' style={{marginTop:'10px'}}>Scene.</label>\r\n                    <textarea className='input-box-large' value={scenes[itemId]} style={{height:'100px'}} onChange={(e) => handleScenes(e.target.value, itemId)} rows='5' cols='50' placeholder='' id='scene' name='scene' />\r\n                */\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const CharCard = ({itemId, chars}) => {\r\n        return (\r\n            <div className='row'>\r\n                <div className='column' style={{width: '25%'}}>\r\n                    {chars.map((character)=>(\r\n                        <div className='charWithPic pointer' onClick={()=>{mapping(character)}}>\r\n                            <img className='icon' src={profile}/>\r\n                            <p className='input-box'>{character}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className='column' style={{width: '60%'}}>\r\n                    <textarea className='input-box-large' value={acts[itemId]} rows='5' cols='50'\r\n                              style={{marginLeft: '60px', width: '100%', height: '127px'}}\r\n                              onChange={(e) => handleActs(e.target.value, itemId, 0)} type='text' placeholder=''\r\n                              id='act' name='act'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='input-container' onSubmit={handleSubmit}>\r\n            <div class='row' style={{height:'550px', width:'1200px', marginTop:'20%', paddingTop:'-200px', marginBottom:'10%', overflow:'scroll'}}>\r\n                {scenes.map((item, index) => (\r\n                    <div>{SceneCard( {itemId:index}) }</div>\r\n                ))}\r\n            </div>\r\n            {\r\n                isMapping&&<div style={{width: '100%', display:'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', left: '0', top:'0'}}><Character></Character></div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n/*\r\n<div style={{ width: \"100%\", overflow: \"auto\", display: \"flex\" }}>\r\n            {map(range(4), idx => (\r\n                <Container itemId={idx} />\r\n            ))}\r\n        </div>\r\n        */\r\n\r\n\r\n//<SceneCard itemId={index} /> <SceneCard itemId='0' chars={chars} acts={acts} scenes={scenes}/>\r\n/*\r\n    return (\r\n        <div className='input-container' style={{textAlign:'left'}}>\r\n            <label className='h3-light'>Information and relationship interpretation.</label>\r\n            <button className='button-light' type='submit' style={{position: 'relative', left: '70px', top: '120px'}}>Save</button>\r\n\r\n            <form className='desc-form' onSubmit={handleSubmit}>\r\n                <text className='input-text' style={{textAlign:'left'}}>{sentence}</text>\r\n                <button className='button-dark' style={{position: 'relative', left: '85%', top: '-35px'}}>Merge</button>\r\n            </form>\r\n\r\n            <form className='inte-form'>\r\n                <body>\r\n                <div class='row'>\r\n                    <div class='column' style={{width:'30%'}}>\r\n                    <label className='input-title'>Character.</label>\r\n                    <input className='input-box' value={char} style={{width:'300px'}} onChange={e => setChar(e.target.value)} type='text' placeholder='' id='char' name='char' />\r\n                    </div>\r\n                    <div class='column' style={{width:'70%'}}>\r\n                    <label className='input-title' style={{marginLeft:'60px'}}>Action.</label>\r\n                    <input className='input-box' value={act} style={{marginLeft:'60px', width:'630px'}} onChange={e => setAct(e.target.value)} type='text' placeholder='' id='act' name='act' />\r\n                    </div>\r\n                </div>\r\n                </body>\r\n                <label className='input-title' style={{marginTop:'20px'}}>Scene.</label>\r\n                <textarea className='input-box-large' value={scene} style={{height:'100px'}} onChange={e => setScene(e.target.value.replace('\\\\n', '\\n'))} rows='5' cols='50' placeholder='' id='scene' name='scene' />\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n*/\r\n\r\n\r\n\r\nexport default Interpretation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}