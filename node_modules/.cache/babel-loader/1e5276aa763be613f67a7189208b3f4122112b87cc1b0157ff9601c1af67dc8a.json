{"ast":null,"code":"var _jsxFileName = \"/Users/yiningmao/Desktop/DreamVideo/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { useRoutes } from 'react-router-dom';\nimport routes from './routes';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Description from './pages/Description';\nimport Interpretation from './pages/Interpretation';\nimport Video from './pages/Video';\nimport Account from './pages/Account';\nimport { BrowserRouter, Route, Routes, useNavigate } from 'react-router-dom';\n\n//import test from './pages/test'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_ORIGIN = '';\nfunction App() {\n  _s();\n  //const routing = useRoutes(routes);\n  const [currentForm, setCurrentForm] = useState('login');\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onFormSwitch: toggleForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onFormSwitch: toggleForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onFormSwitch: toggleForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JZuUoNEWehkhXwpZ9bwOclIrMq8=\");\n_c = App;\n;\nexport default App;\n\n//{\n//currentForm === 'login' ? <Login onFormSwitch={toggleForm}/> : <Register onFormSwitch={toggleForm}/>\n//<Account />\n//<test />\n//<Description />\n//<Interpretation />\n//<Video />\n//}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRoutes","routes","Login","Register","Description","Interpretation","Video","Account","BrowserRouter","Route","Routes","useNavigate","SERVER_ORIGIN","App","currentForm","setCurrentForm","toggleForm","formName"],"sources":["/Users/yiningmao/Desktop/DreamVideo/my-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { useRoutes } from 'react-router-dom';\nimport routes from './routes';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Description from './pages/Description';\nimport Interpretation from './pages/Interpretation';\nimport Video from './pages/Video'\nimport Account from './pages/Account';\nimport { BrowserRouter, Route, Routes, useNavigate } from 'react-router-dom';\n\n//import test from './pages/test'\n\nconst SERVER_ORIGIN = '';\n\nfunction App() {\n  //const routing = useRoutes(routes);\n  const [currentForm, setCurrentForm] = useState('login');\n  \n\n  const toggleForm = (formName) => {\n    setCurrentForm(formName);\n  }\n\n  return (\n    <BrowserRouter>\n    <Routes>\n      <div className='App'>\n      <Route exact path=\"/\" element={<Login onFormSwitch={toggleForm}/>} />\n      <Route exact path=\"/login\" element={<Login onFormSwitch={toggleForm}/>} />\n      <Route exact path=\"/register\" element={<Register onFormSwitch={toggleForm}/>} />\n      </div>\n    </Routes>\n    </BrowserRouter>\n    \n  );\n};\n\nexport default App;\n\n//{\n  //currentForm === 'login' ? <Login onFormSwitch={toggleForm}/> : <Register onFormSwitch={toggleForm}/>\n  //<Account />\n  //<test />\n  //<Description />\n  //<Interpretation />\n  //<Video />\n//}\n\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;;AAE5E;AAAA;AAEA,MAAMC,aAAa,GAAG,EAAE;AAExB,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EAGvD,MAAMiB,UAAU,GAAIC,QAAQ,IAAK;IAC/BF,cAAc,CAACE,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACE,QAAC,aAAa;IAAA,uBACd,QAAC,MAAM;MAAA,uBACL;QAAK,SAAS,EAAC,KAAK;QAAA,wBACpB,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,KAAK;YAAC,YAAY,EAAED;UAAW;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG,eACrE,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,eAAE,QAAC,KAAK;YAAC,YAAY,EAAEA;UAAW;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1E,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,OAAO,eAAE,QAAC,QAAQ;YAAC,YAAY,EAAEA;UAAW;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAC1E;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACO;AAGpB;AAAC,GArBQH,GAAG;AAAA,KAAHA,GAAG;AAqBX;AAED,eAAeA,GAAG;;AAElB;AACE;AACA;AACA;AACA;AACA;AACA;AACF;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}